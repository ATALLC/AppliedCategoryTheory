#+TITLE: Long List of ACT Resources

This is a rather disorganized collection of links.

See also [[https://t.co/oxZF8h0ApS][Statebox's Curated List of ACT Resources]].

* Podcasts and Videos

   * [[https://corecursive.com/035-bartosz-milewski-category-theory/][Bartosz Milewski on Category Theory in Programming]]
     If you're a programmer, listen to this first!

   * [[https://www.youtube.com/watch?v=P6DvIfTJhx8&feature=youtu.be][Category Theory: The Beginner's Introduction]] six-part series
     that uses music theory.
     
   * [[https://youtu.be/I8LbkfSSR58?t=2674][Bartosz Milewski Category Theory]] multi-part lecture series

   * [[https://www.youtube.com/watch?v=UusLtx9fIjs&t=525s&index=2&list=PLhgq-BqyZ7i5lOqOqqRiS0U5SwTmPpHQ5][Applied Category Theory lectures]] from MIT uses Seven Sketches textbook.

   * [[https://www.youtube.com/watch?v=Ssx2_JKpB3U][A Categorical View of Computational Effects]] Emily Riehl @ LambdaWorld 2019

   * [[https://www.youtube.com/user/TheCatsters][The Catsters]] short lectures

* Meetup groups and symposia

   * [[https://www.meetup.com/Category-Theory/][SF Category Theory meetup]]
   * [[https://www.meetup.com/NYC-Category-Theory/][NYC Category Theory meetup]]    

   * [[http://www.appliedcategorytheory.org/][Applied Category Theory symposia]]
   * [[https://summit.statebox.org/static.html][StateBox summit]]
   * [[http://math.ucr.edu/home/baez/SYCO4/][Applied Category Theory talks at SYCO4]]

     
* Suggested Introductory Papers

   * [[https://arxiv.org/pdf/1909.10475.pdf][String Diagrams for Assembly Planning]]

   * [[http://www.inf.ufrgs.br/~eslgastal/files/cmvfs.pdf][A Categorical Model for a Versioning File System]]

     
* Software engineering
  
  CT is useful for [per Easterbrook]:
      * Modeling and reasoning about structure
      * Provides precise notions of modularity and composition
      * Specification morphisms relate vocabulary and properties of specifications
      * Constructive approach lends itself to automation
   

   * [[http://www.inf.ufrgs.br/~eslgastal/files/cmvfs.pdf][A Categorical Versioned Filesystem]]: Developers are intimately familiar
     with filesystems.  This paper shows how to model them mathematically
     and uses the model to introduce CT concepts.
     
   * [[https://gsd.uwaterloo.ca/sites/default/files/Accat12-paper7.pdf][Category Theory and Model-Driven Engineering]]: SE is fundamentally about
     building conceptual models and then faithfully transforming them into 
     execution models.  This paper makes that explicit.

   * [[http://www.cs.toronto.edu/~sme/presentations/cat101.pdf][An Introduction to Category Theory for Software Engineers]] Steve Easterbrook

   * [[https://pdfs.semanticscholar.org/6967/97cd745dbe49a225eac5912d76c845d8dfdf.pdf][A Mathematical Toolbox for the Software Architect]]

   * [[https://arxiv.org/pdf/1311.3903.pdf][A Categorical Theory of Patches]] gives a mathematical basis for revision
     control, eg describes merges as pushouts
     
   * [[http://www.math.mcgill.ca/triples/Barr-Wells-ctcs.pdf][Category Theory for Computing Science]], Barr and Wells

   * [[https://seemannworkshop.netcorebcn.group/][Universal Design Patterns]] Mark Seemann

* Data engineering

   * [[https://categoricaldata.net/][categoricaldata.net]] (leads to [[https://conexus.ai/][conexus.ai]], a company commercializing these
     ideas)
     
   * [[https://arxiv.org/pdf/1906.05937.pdf][A complete language for faceted dataflow programs]] describes ETL processes.

   * [[https://arxiv.org/abs/1909.04881][Algebraic Property Graphs]]: We propose algebraic property graphs as a simple
     but mathematically rigorous bridge between graph and non-graph data models,
     broadening the scope of graph computing by removing obstacles to the
     construction of virtual graphs.

   * [[https://arxiv.org/abs/1503.03571][Algebraic Data Integration]]

   * [[http://cql.conexus.ai/][CQL Categorical Query Language]] @ conexus

   * [[http://math.mit.edu/~dspivak/informatics/talks/CTDBIntroductoryTalk][Categorical Databases]] presentation slides, spivak

   * [[http://math.mit.edu/~dspivak/informatics/grants/NASA-Proposal.pdf][NASA Proposal, Spivak]] mentions agent interactions

   * [[https://arxiv.org/pdf/1202.2591.pdf][Database Queries and Constraints as Lifting Problems]] discusses deriving RDF
     triples from a database instance.

   * [[https://arxiv.org/pdf/1009.1166.pdf][Functorial Data Migration]]

   * [[https://arxiv.org/abs/1212.5303][Relational Foundations for Functorial Data Migration]]

   * [[https://arxiv.org/abs/1910.07519][On foundational aspects of RDF and SPARQL]]: We propose a new formal
     framework based on category theory which provides clear and concise formal
     definitions of the main basic features of RDF and SPARQL. We propose to
     define the notions of RDF graphs as well as SPARQL basic graph patterns as
     objects of some nested categories. This allows one to clarify, in
     particular, the role of blank nodes. Furthermore, we consider basic SPARQL
     CONSTRUCT and SELECT queries and formalize their operational semantics
     following a novel algebraic graph transformation approach called POIM.

   * [[https://arxiv.org/abs/1910.03118][The Query Translation Landscape: A Survey]]

   * [[https://arxiv.org/pdf/1910.09017.pdf][Demystifying Graph Databases: Analysis and Taxonomy of Data Organization,
     System Designs, and Graph Queries]]

   * [[http://computingengineering.asmedigitalcollection.asme.org/article.aspx?articleid=2539429][Using Category Theory to Facilitate Multiple Manufacturing Service Database
     Integration]] semantic integration

   * [[http://www.cs.cmu.edu/~natassa/courses/15-823/current/papers/CLIO-SIGMOD2005.pdf][Clio,  IBM Research  system  for  expressing  declarative  schemamappings]]

   * [[https://arxiv.org/pdf/1209.1011.pdf][Kleisli Database Instances]]

   * [[https://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=7C32AA38CA2A65FABCC98A50D728C854?doi=10.1.1.42.4942&rep=rep1&type=pdf][The Kleisli System]]

   * [[https://arxiv.org/pdf/0904.2012.pdf][Simplicial Databases]]

   * [[http://www.michael-noll.com/blog/2013/12/02/twitter-algebird-monoid-monad-for-large-scala-data-analytics/][Of Algebirds, Monoids, Monads, and other Bestiary for Large-Scale Data Analytics]]

* Computer Science

   * [[https://ncatlab.org/nlab/show/A+Categorical+Manifesto][A Categorical Manifesto]] and [[http://www.j-paine.org/make_category_theory_intuitive.html][Make Category Theory Intuitive]] explain why
     category theory should have a wider audience in computer science.

   * [[https://www.sciencedirect.com/science/article/pii/0167642387900207][Categorical Abstract Machine]]
     
   * [[https://github.com/epatters/Catlab.jl][Catlab]] is an experimental library for computational category theory,
     written in Julia.

* Natural Language Processing

   * [[https://arxiv.org/pdf/1901.10723.pdf][Compositionality for Recursive Neural Networks]]
   * [[https://golem.ph.utexas.edu/category/2018/02/linguistics_using_category_the.html][Linguistics using Category Theory]] is a summary of the paper
     [[https://arxiv.org/abs/1003.4394][Mathematical Foundations for a Compositional Distributional Model of Meaning]].
     Certain CT methods were shown to out-perform other methods.

   * [[https://www.logicmatters.net/resources/pdfs/Galois.pdf][The Galois Connection between Syntax and Semantics]]

   * [[https://arxiv.org/pdf/1904.03478.pdf][The Mathematics of Text Structure]] is a 2019 paper that doesn't assume
     much knowledge of category theory.

   * [[http://lecomte.al.free.fr/ressources/PARIS8_LSL/Lambek.pdf][The Mathematics of Sentence Structure]] is an early paper by Lambek ([[https://www.cs.cmu.edu/~fp/courses/15816-f16/misc/Lambek58.pdf][JSTOR]]).

   * [[https://cseweb.ucsd.edu/~goguen/projs/semio.html][Algebraic Semiotics]]

   * [[https://sites.google.com/view/capns2018/home?authuser=0][Conference: Compositional Approaches for Physics, NLP, and Social Sciences 2018]]

   * [[https://arxiv.org/pdf/1811.11041.pdf][Translating and Evolving: Towards a Model of Language Change in DisCoCat]]
     accounts for evolution within a language, and translation between languages.

   * [[https://en.wikipedia.org/wiki/Categorial_grammar][Categorial Grammar]] is a term used for a family of formalisms in natural language
     syntax motivated by the principle of compositionality and organized according to
     the view that syntactic constituents should generally combine as functions or
     according to a function-argument relationship.

   * [[https://arxiv.org/search/cs?searchtype=author&query=Coecke%252C+B][Papers by Bob Coecke]] are mainly about NLP.

   * [[https://arxiv.org/pdf/1908.04291.pdf][The far side of the cube]] Dan R. Ghica derives the most general game model in
     which all other game models live.
     
   * [[http://conal.net/papers/][Conal Elliot papers]]

   * [[http://repmus.ircam.fr/_media/moreno/Andreatta_Creativity_MCM2013.pdf][Towards a Categorical Theory of Creativity for Music, Discourse, and Cognition]]

   * [[http://conal.net/papers/compiling-to-categories/][Compiling to Categories]], Conal Elliot

* Game Theory

  Communication is a game.

   * [[http://www.gtcenter.org/Archive/2014/Conf/Jimenez1880.pdf][Game Theory from a Categoric Point of View]]

   * [[https://arxiv.org/pdf/1603.04641.pdf][Compositional Game Theory]] Ghani, Hedges, Winschel, [[https://www.philipp-zahn.com/profile/][Zahn]]

   * ([[https://twitter.com/_julesh_/status/1177687657062764547?s=03][Tweet from Jules Hedges]])
   * [[https://t.co/wUGJWH1D1S][The paper introducing open games]]
   * [[https://t.co/KGbjAymxz1][Compositional game theory bibliography]]
   * [[https://t.co/4aK5a1r8Ko][On compositionality]]
   * [[https://t.co/GecVY6oyqV][Applying the rising sea]]
   * [[https://t.co/APVoPKfoLK][Open games tool demo]]

   * [[https://bosker.files.wordpress.com/2010/12/joyal-games.pdf][Joyal: Two-Person Games]]


   * [[http://math.ucr.edu/home/baez/games/games_1.html][John Baez game theory course notes]]

   * [[https://cacm.acm.org/magazines/2019/1/233530-deception-identity-and-security/fulltext][Deception, Identity, and Security: The Game Theory of Sybil Attacks]]

* Complex Systems
  
  [[https://julesh.com/2019/12/02/lax-functors-describe-emergent-effects/][Lax Functors Describe Emergent Effects]]

* References
  


[[https://statebox.org/][statebox.org]] is commercializing verifiable systems

[[https://johncarlosbaez.wordpress.com/2018/01/22/statebox-a-universal-language-of-distributed-systems/][Statebox: A Universal Language of Distributed Systems]] describes the
open project that aims to build a programming language based on
universal mathematical principles.  The aim is to apply these
principles to solving problems of coordination in large-scale
distributed systems, even complex ones.


[[https://www.mit.edu/~eadam/eadam_PhDThesis.pdf][Systems, Generativity and Interactional Effects by Elie M. Adam]]

[[https://arxiv.org/pdf/1305.0297.pdf][The Operad of Wiring Diagrams]] explains operads, which are a way of studying
hierarchies where each "layer" is composed of components in a lower layer.

[[https://apps.dtic.mil/docs/citations/AD1060774][Categorical Approach to Agent Interactions]] proposal by Spivak.
[[https://apps.dtic.mil/dtic/tr/fulltext/u2/1060774.pdf][Categorical Approach to Agent Interactions final report]]

[[https://arxiv.org/pdf/1504.05625.pdf][A Compositional Framework for Passive Linear Networks]]

[[https://arxiv.org/abs/1704.02051][A Compositional Framework for Reaction Networks]]

[[https://arxiv.org/pdf/1904.12974.pdf][Computational Petri Nets: Adjunction considered harmful]]

[[Https://air.unimi.it/retrieve/handle/2434/155499/138859/phd_unimi_R07647.pdf][Hierarchical-Granularity Holonic Modelling]]

[[https://courses.engr.illinois.edu/cs522/sp2016/InstitutionsAbstractModelTheory.pdf][Institutions: Abstract Model Theory]]

[[https://cseweb.ucsd.edu/~goguen/pps/ifi04.pdf][Information Integration in Institutions]]

** Set Theory
   
   * [[https://arxiv.org/abs/0810.1279][Set Theory for Category Theory]]
   * [[http://www.tac.mta.ca/tac/reprints/articles/11/tr11abs.html][Lawvere: on Category of Sets]]
   * [[https://www.cambridge.org/core/books/sets-for-mathematics/E899F592AD8FBA9A550B1ED3E1E61EC3][Lawvere: Sets for Mathematics]]


** Category Theory

Category theory underpins mathematics, and therefore programming
languages. Historically it's been presented as a unifying study of deep
symmetries in mathematics in a way that's impenetrable to
non-specialists. More recently it's come to the attention of a wider
audience of programming language aficionados, especially in functional
language communities such as Haskell and type-theorists, and formal
proof systems.

[[https://plato.stanford.edu/entries/category-theory/][Stanford Encyclopedia on Category Theory]]

[[https://groupoids.org.uk/pdffiles/Analogy-and-Comparison.pdf][Category Theory: A Framework for Analogy and Comparison]]

[[https://arxiv.org/pdf/1809.05923.pdf][What is Applied Category Theory?]]

[[https://www.math3ma.com/blog/what-is-category-theory-anyway][What is Category Theory Anyway?]]

[[https://www.logicmatters.net/resources/pdfs/GentleIntro.pdf][A Gentle Introduction to Category Theory]] Peter Smith, LogicMatters


[[http://abel.math.harvard.edu/~mazur/preprints/when_is_one.pdf][When is one thing equal to another?]] Barry Mazur, on equivalence

[[https://ncatlab.org/nlab/show/HomePage][nCat Lab]] is a wikipedia-like site for "category theory in the large": using
category theory to describe EVERYTHING.

John Baez's [[http://math.ucr.edu/home/baez/week73.html#tale][description of n-Categories]] was the most illuminating I've found.
The other articles in that blog are well worth reading, too.

[[https://github.com/jwiegley/category-theory][Category Theoretic constructions in Coq]]

[[https://ncatlab.org/nlab/show/sheaf+semantics+of+concurrent+interacting+objects][Sheaf Semantics for Concurrent Interacting Objects]]

[[https://blog.statebox.org/programming-is-just-an-example-6bc6bacb7b72][Programming Languages as Categories]]

[[https://www.math3ma.com/blog/the-yoneda-perspective][The Yoneda Perspective]]: You are your relationships


[[https://johncarlosbaez.wordpress.com/2019/03/24/complex-adaptive-system-design-part-9/][Complex Adaptive Systems Design part 9]]

[[http://www.ams.org/journals/proc/1994-122-02/S0002-9939-1994-1216823-2/home.html][An adjoint characterization of the category of Sets]]




** Application Areas

[[https://vimeo.com/6590617][Commutative Monads, Diagrams and Knots]] video Dan Piponi for Haskell programmers

[[https://arxiv.org/abs/1401.4585][Arrow's theorem by arrow theory]], Abramsky

[[https://arxiv.org/pdf/1311.4376.pdf][Understanding Visualization: A Formal Approach using Category Theory and
Semiotics]]

[[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.73.9803&rep=rep1&type=pdf][An Introduction to Algebraic Semiotics, with Application to User Interface
Design]]

[[http://www.few.vu.nl/~rplanque/Onderwijs/MathBio/PapersForProject/Rosen.pdf][Robert Rosen: The Representation of Biological Systems from the Standpoint of
the Theory of Categories]] 1958

[[https://www.academia.edu/20729996/Category_Theory_as_a_Mathematics_for_Formalizing_Ontologies][Category Theory as a Mathematics for Formalizing Ontologies]]

[[http://delivery.acm.org/10.1145/3240000/3236765/icfp18main-p18-p.pdf][Simple Essence of Automatic Differentiation]] application in machine learning
(video of [[https://www.youtube.com/watch?v=MmkNSsGAZhw&feature=youtu.be&__s=zqzmedcvejvhpuaznsfv][Simple essence of automatic differentiation Talk]])

[[https://apps.dtic.mil/dtic/tr/fulltext/u2/a297528.pdf][FORMAL FOUNDATIONS FOR THE SPECIFICATION OF SOFTWARE ARCHITECTURE
DISSERTATION Mark James Gerken]]


[[https://arxiv.org/abs/1906.05443][Rewriting Structured Cospans: A Syntax For Open Systems]]

[[https://arxiv.org/abs/1908.10660][Foundations of Brick Diagrams]]

[[https://twitter.com/typeswitch/status/1169679047892381697?s=03][Adjointness Pattern: ( )^L <=> ( )xL]]

[[https://en.wikipedia.org/wiki/Categorial_grammar][Categorial Grammar]] is a term used for a family of formalisms in natural language
syntax motivated by the principle of compositionality and organized according to
the view that syntactic constituents should generally combine as functions or
according to a function-argument relationship.

[[https://www.dpmms.cam.ac.uk/~martin/Research/Publications/2007/hp07.pdf][The Category Theoretic Understanding of
Universal Algebra: Lawvere Theories and Monads]]

[[http://cogprints.org/7753/6/AdjDynSystems.pdf][On adjoint dynamical systems]] Baianu and Scripcariu, Bulletin of Mathematical Biology, Volume 35, 1973

[[https://upload.wikimedia.org/wikipedia/commons/4/48/Final_Topics_Paper_on_Catos.pdf][Category Theory Pertaining to Dynamical Systems]] shows that in a certain category of dynamical systems,
a chaotic observable implies a chaotic dynamic system.

[[http://www.few.vu.nl/~rplanque/Onderwijs/MathBio/PapersForProject/Rosen.pdf][The Representation of Biological Systems from the Standpoint of the Theory of Categories]], Robert Rosens,
Bulletin of Mathematical Biophysics, Volume 20, 1958

A mathematical framework for a rigorous theory of general systems is
constructed, using the theory of Categories and Functors inroduced by Eilenberg
and MacLane. A short discussion of the basic ideas is given, and their possible
application to the theory of biological systems is discussed.  On the basis of these considerations,
a number of results are proved, includuing the possibility of selecting a unique representative (a "canonical form")
from a family of mathematical objects, all of which represent the same system.
As an example, the reprsentation of the neural net and the finit automaton is
constructed in terms of our general theory.

[[https://static.aminer.org/pdf/PDF/000/392/201/category_theory_applied_to_neural_modeling_and_graphical_representations.pdf][Category theory applied to neural modeling and graphical representations]]

[[https://arxiv.org/abs/1409.5531][A Theory of Resources]] Coecke

The last two minutes of [[https://youtu.be/I8LbkfSSR58?t=2674][Bartosz Milewski Category Theory 1.1]] makes the point
that category theory is more about epistemology (the way we think) than ontology
(the way things are).
Semiotics is also about epistemology.

[[http://www.cs.ox.ac.uk/ACT2019/preproceedings/John%2520Nolan,%2520Blake%2520Pollard,%2520Spencer%2520Breiner,%2520Dhananjay%2520Anand%2520and%2520Eswaran%2520Subrahmanian.pdf][Compositional models for power systems]] Nolan, Pollard, Breiner

[[https://arxiv.org/pdf/1909.10475.pdf][String Diagrams for Assembly Planning]]

[[https://arxiv.org/abs/1703.08314][Interacting Conceptual Spaces I : Grammatical Composition of Concepts]]

[[https://www.researchgate.net/publication/254920369_Compositionality_and_Systematicity][Compositionality and Systematicity]]

[[Https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005683][Categorical Theory and Numerical Knowledge]]

[[https://www.karger.com/Article/PDF/275811][Categorical treatment of how logical structures develop, Piaget]]
 

** Other math

   * [[http://math.ucr.edu/home/baez/books.html][How to learn math and physics]], John Baez's advice.

   * [[https://www.math3ma.com/blog/the-tensor-product-demystified][The tensor product, demystified]]

   * [[https://jeremykun.com/2014/01/17/how-to-conquer-tensorphobia/][How to conquer tensorphobia]]

   * [[https://faculty.math.illinois.edu/~r-ash/Algebra/Chapterr10.pdf][Abstract Algebra: Basic Graduate Year, Chap 10]] describes categories
     using examples in sets, groups, rings, fields, modules.
     The [[https://faculty.math.illinois.edu/~r-ash/Algebra.html][main site]] is good for abstract algebra, too.

   * [[https://home.uchicago.edu/~jpadgett/papers/unpublished/Economic.Production.as.Chemistry.II.pdf][Economic Production as Chemistry]] resource theories!
   * [[http://tuvalu.santafe.edu/~wbarthur/complexityeconomics.htm][Brian Arthur: Complexity Economics]]
   * [[https://www.lesswrong.com/posts/T7aQqNm6m8pTXZYnd/bayesian-probability-theory-as-extended-logic-a-new-result][Bayesian Probability Theory as Extended Logic]]
   * [[http://www.capax.sx/index.php/Agoric_papers][Agoric Papers]]

   * [[http://www.themathcitadel.com/wp-content/uploads/2019/03/counterexamples-prob-indep.pdf][Counterexamples in Probability]], Rachel Traylor
   * [[http://math.ucr.edu/home/baez/thesis_defense_pollard.pdf][Open Markov Networks]] Blake Pollard

   * [[http://www.cs.ox.ac.uk/ACT2019/preproceedings/John%2520Nolan,%2520Blake%2520Pollard,%2520Spencer%2520Breiner,%2520Dhananjay%2520Anand%2520and%2520Eswaran%2520Subrahmanian.pdf][Compositional Models for Power Systems]], article in Compositionality journal
   * [[https://github.com/NREL/PowerSystems.jl][PowerSystems.jl]] National Renewable Energy Lab software for analysis
     and modeling of power systems.

   * [[https://blog.usejournal.com/monoids-to-groupoids-492c35105113][Monoids to Groupoids]]
   * [[https://medium.com/@reinman/its-reboot-time-for-operating-systems-6a516ad8e89c][It's Reboot Time for Operating Systems]]

   * [[https://db.in.tum.de/~grust/files/monad-comprehensions.pdf][Monad Comprehensions: a Versatile Representation for Queries]]

   * [[https://www.cs.utah.edu/~mflatt/past-courses/cs7520/public_html/s06/notes.pdf][Programming Languages and Lambda Calculi]]

   * [[http://conal.net/papers/compiling-to-categories/][Compiling to Categories]]

   * [[https://www.hillelwayne.com/post/formally-modeling-migrations/][Formally Modeling Migrations]]

   * [[https://arxiv.org/abs/1910.04383][Causality and deceit: Do androids watch action movies?]]

   * [[http://www.inf.ufrgs.br/~eslgastal/files/cmvfs.pdf][A Categorical Model for a Versioning File System]]

   * [[https://ncatlab.org/nlab/show/partial+combinatory+algebra][Partial Combinatory Algebra]] describes what happens
     in untyped languages, where what would be type mismatches
     manifest as runtime errors.
     
   * [[https://arxiv.org/abs/1911.00818][A Practical Type System for Symmetric Monoidal Categories]]

   * [[http://db.cis.upenn.edu/DL/07/pods07.pdf][Provenance Semirings]]

   * [[https://zenodo.org/record/2565243#.XcWc-U9KhhF][Stream Ring Theory]]

   * [[https://www.slideshare.net/slidarko/mmadt-a-multimodel-abstract-data-type][mm-ADT]] Multi-model Abstract Data Types

   * [[https://pure.tue.nl/ws/files/2154050/200402.pdf][A Brief History of Process Algebra]]

   * [[https://uniformal.github.io/][MMT Meta-Meta Tool]] enabling uniform representation of knowledge

   * [[https://github.com/jozefg/learn-tt][Learn Type Theory]] collection of introductory resources

* Books

** Introductory
   
   [[https://arxiv.org/pdf/1803.05316.pdf][Seven Sketches in Compositionality: Invitation to Applied Category Theory]]
   is the textbook used in [[https://www.youtube.com/watch?v=UusLtx9fIjs&t=525s&index=2&list=PLhgq-BqyZ7i5lOqOqqRiS0U5SwTmPpHQ5][Applied Category Theory courseware]] from MIT.

   [[https://www.amazon.com/Category-Theory-Sciences-MIT-Press/dp/0262028131][Category Theory for the Sciences]], David I. Spivak
   There is an [[http://math.mit.edu/~dspivak/CT4S.pdf][abridged free version]] of this, too.
   
   [[https://github.com/hmemcpy/milewski-ctfp-pdf][Category Theory for Programmers]] Bartosz Milewski

   [[%5B%5Bhttp://pi.math.cornell.edu/~hatcher/AT/ATpage.html%5D%5BAlegraic%20Topology%5D%5D%0Ahttps://www.barnesandnoble.com/p/conceptual-mathematics-f-william-lawvere/1100948021/2694607767497?st=PLA&sid=BNB_ADL+Marketplace+Good+New+Textbooks+-+Desktop+Low&sourceId=PLAGoNA&dpid=tdtve346c&2sid=Google_c&gclid=EAIaIQobChMI_P-XgLH_4QIVRz0MCh1jPgqqEAQYASABEgK59vD_BwE][Conceptual Mathematics: A first introduction to categories]], Lawvere and Schanuel
   is the most approachable one I've found yet.

   [[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.211.4754&rep=rep1&type=pdf][Category Theory, Steve Awodey]]
   
   [[https://pimbook.org/][A Programmer's Introduction to Mathematics]], Jeremy Kun
   
** Not so introductory

   [[http://www.math.jhu.edu/~eriehl/context.pdf][Category Theory in Context]], Riehl


** Background

   * [[http://pi.math.cornell.edu/~hatcher/AT/ATpage.html][Alegraic Topology]], Hatcher

   * [[https://www.amazon.com/Software-Abstractions-Logic-Language-Analysis/dp/0262528908/][Software Abstractions]] introduction to formal methods

   * [[https://en.m.wikipedia.org/wiki/Laws_of_Form][Laws of Form]]

   * [[http://abstract.ups.edu/aata/][Abstract Algebra]] Theory and Applications, Judson open-source textbook


* Breakthroughs :)

Jules Hedges, [02.10.19 07:19]
I'm proud to announce I've invented the term "yoloidal category" for a
non-strict monoidal category that you pretend is strict so you can interpret
string diagrams there

sg495, [02.10.19 07:22]
What about "fomoidal categories"? They are not really monoidal, but they will
pretend to be if that gets them into the party.

sg495, [02.10.19 07:24]
(e.g. the cartesian closed categories in which you add duals and they become
2-categories but you pick both background colours to be transparent so your
diagrams look like they live in a monoidal category)

Jules Hedges, [02.10.19 07:25]
That's both fomoidal and yoloidal - you need to pretend that the product is
strictly associative

Jules Hedges, [02.10.19 07:25]
Yoloidal categories are a technical trick to avoid thinking about the Mac Lane
coherence theorem 100 times a day, by pretending it doesn't exist

Jules Hedges, [02.10.19 07:36]
Abramsky's "Arrow's theorem by arrow theory" for example
https://arxiv.org/abs/1401.4585

